import requests
import time
import os
from pathlib import Path
import json

def setup_hunyuan():
    """Set up the Hunyuan environment by making an API call to the backend"""
    print("Setting up Hunyuan environment...")
    try:
        response = requests.get("http://localhost:5555/video/setup-hunyuan")
        if response.status_code == 200:
            result = response.json()
            print("Setup response:", json.dumps(result, indent=2))
            return True
        else:
            print(f"Error setting up Hunyuan: {response.status_code}")
            print(response.text)
            return False
    except Exception as e:
        print(f"Error making setup request: {str(e)}")
        return False

def generate_hunyuan_video(prompt, width=640, height=360):
    """Generate a video using Hunyuan via the API"""
    print(f"Generating video for prompt: '{prompt}'")
    try:
        # Make the API request
        response = requests.get(
            "http://localhost:5555/video/hunyuan-video", 
            params={
                "prompt": prompt,
                "width": width,
                "height": height,
                "duration": 5,
                "fps": 24
            }
        )
        
        if response.status_code == 200:
            result = response.json()
            print("Generation response:", json.dumps(result, indent=2))
            
            # Get video URL
            video_url = result.get("video_url")
            if video_url:
                print(f"Video URL: {video_url}")
                
                # Wait for video to be generated (poll the status endpoint)
                wait_for_video(video_url)
                
                return video_url
            else:
                print("No video URL in response")
                return None
        else:
            print(f"Error generating video: {response.status_code}")
            print(response.text)
            return None
    except Exception as e:
        print(f"Error making generation request: {str(e)}")
        return None

def wait_for_video(video_url):
    """Wait for the video to be generated by polling the URL"""
    print("Waiting for video to be generated...")
    max_attempts = 6000
    for attempt in range(max_attempts):
        try:
            # Try to download the video
            response = requests.head(video_url)
            if response.status_code == 200:
                print("Video is ready!")
                return True
            else:
                print(f"Video not ready yet (attempt {attempt+1}/{max_attempts})...")
                time.sleep(5)  # Wait 5 seconds before next attempt
        except Exception as e:
            print(f"Error checking video status: {str(e)}")
            time.sleep(5)
    
    print("Timed out waiting for video")
    return False

def main():
    # First, set up Hunyuan
    if not setup_hunyuan():
        print("Failed to set up Hunyuan. Exiting.")
        return
    
    # Generate a video
    prompt = "A cinematic shot of a cat walking on grass, 4K, high quality"
    video_url = generate_hunyuan_video(prompt)
    
    if video_url:
        print(f"Video generation completed successfully. URL: {video_url}")
    else:
        print("Failed to generate video.")

if __name__ == "__main__":
    main() 